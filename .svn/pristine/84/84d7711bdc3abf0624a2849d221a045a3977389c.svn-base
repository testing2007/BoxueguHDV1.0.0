//
//  BXGConstrueReplayHeaderView.swift
//  BoxueguHD
//
//  Created by Renying Wu on 2018/7/24.
//  Copyright © 2018年 itcast. All rights reserved.
//

import Foundation

class BXGConstrueReplayHeaderView: UIView {
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        installUI()
    }
    lazy var headerViewDateLb: UILabel = {
        let view = UILabel()
        return view
    }()
    
    lazy var tagLb: UILabel = {
        let view = UILabel()
        view.text = "直播"
        view.font = UIFont.pingFangSCRegular(withSize: 15)
        view.textColor = UIColor.hexColor(hex: 0x333333)
        return view
    }()
    
    lazy var redCircularView: UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.red
        return view
    }()
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    func installUI() {
        backgroundColor = UIColor.white
        
        addSubview(tagLb)

        tagLb.snp.makeConstraints{ (make) in
            make.right.equalToSuperview().offset(-15)
            make.centerY.equalToSuperview()
        }
        
        tagLb.setContentHuggingPriority(UILayoutPriority.required, for: UILayoutConstraintAxis.horizontal)
        
        
        addSubview(redCircularView)
        redCircularView.snp.makeConstraints{ (make) in
            make.right.equalTo(tagLb.snp.left).offset(-5)
            make.width.height.equalTo(10)
            make.centerY.equalToSuperview()
        }
        redCircularView.layoutIfNeeded()
        redCircularView.layer.cornerRadius = redCircularView.bounds.size.height * 0.5
        
        addSubview(headerViewDateLb)
        headerViewDateLb.snp.makeConstraints { (make) in
            make.left.equalTo(15)
            make.centerY.equalToSuperview()
        }
    }
    
    
    func setHeaderDate(date: Date) {
        let gregorian = Calendar(identifier: Calendar.Identifier.gregorian)
        
        let components = gregorian.dateComponents([Calendar.Component.year, Calendar.Component.month], from: date)
        let yearInteger = components.year
        let monthInteger = components.month
        
        let monthStringValue = String.init(format: "%02zd月", monthInteger ?? 0)
        let yearStringValue = String.init(format: "/%4zd", yearInteger ?? 0)
        
        let monthAttString = NSAttributedString(string: monthStringValue, attributes: [NSAttributedStringKey.font: UIFont.pingFangSCRegular(withSize: 17), NSAttributedStringKey.foregroundColor: UIColor.hexColor(hex: 0x333333)])
        
        let yearAttString = NSAttributedString(string: yearStringValue, attributes: [NSAttributedStringKey.font: UIFont.pingFangSCRegular(withSize: 11), NSAttributedStringKey.foregroundColor: UIColor.hexColor(hex: 0x666666)])
        
        let string = NSMutableAttributedString(string: "")
        string.append(monthAttString)
        string.append(yearAttString)
        headerViewDateLb.attributedText = string
        
        
    }
}
