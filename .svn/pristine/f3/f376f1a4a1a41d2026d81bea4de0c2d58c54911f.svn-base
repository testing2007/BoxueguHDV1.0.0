//
//  BXGDownloadingCell.swift
//  BoxueguHD
//
//  Created by apple on 2018/7/9.
//  Copyright © 2018年 itheima. All rights reserved.
//

import UIKit

class BXGDownloadingCell: UITableViewCell {

    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
    }

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.installUI()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    func installUI() {
        self.contentView.addSubview(self.coureNameLabel)
        self.contentView.addSubview(self.downloadProgressView)
        self.contentView.addSubview(self.downloadSpeedLabel)
        self.contentView.addSubview(self.downloadStatusBtn)
        
        self.coureNameLabel.snp.makeConstraints { (make) in
            make.left.equalTo(25.5)
            make.centerY.equalTo(self)
        }
        
        self.downloadStatusBtn.snp.makeConstraints { (make) in
            make.right.equalTo(-25.5)
            make.centerY.equalTo(self)
            make.width.equalTo(21)
            make.height.equalTo(21)
        }
        
        self.downloadSpeedLabel.snp.makeConstraints { (make) in
            make.right.equalTo(self.downloadStatusBtn.snp.left).offset(-15)
            make.centerY.equalTo(self)
        }
        
        self.downloadProgressView.snp.makeConstraints { (make) in
            make.right.equalTo(self.downloadSpeedLabel.snp.left).offset(-15)
            make.centerY.equalTo(self)
            make.width.equalTo(300)
            make.height.equalTo(7);
        }
        
        self.downloadProgressView.setContentHuggingPriority(.required, for: UILayoutConstraintAxis.horizontal)
        self.downloadProgressView.setContentCompressionResistancePriority(.required, for: UILayoutConstraintAxis.horizontal)
    }
    
    var coureNameLabel:UILabel = {
        let label:UILabel = UILabel()
        label.textColor = UIColor.hexColor(hex: 0x34495E)
        label.font = UIFont.pingFangSCRegular(withSize: 15)
        return label;
    }()
    
    var downloadProgressView:UIProgressView = {
        let progressView:UIProgressView = UIProgressView()
        progressView.trackTintColor = UIColor.hexColor(hex: 0xE5EBEF)
        progressView.progressTintColor = UIColor.hexColor(hex: 0x375FD8)
        return progressView;
    }()
    
    var downloadSpeedLabel:UILabel = {
        let label:UILabel = UILabel()
        label.textColor = UIColor.hexColor(hex: 0x000000)
        label.font = UIFont.pingFangSCRegular(withSize: 12)
        label.textAlignment = .left;
        return label;
    }()
    
    var downloadStatusBtn : UIButton = {
        let btn:UIButton =  UIButton(type: UIButtonType.custom)
        btn.addTarget(self, action: #selector(BXGDownloadingCell.onClickDownloadStatus), for: UIControlEvents.touchUpInside)
        return btn;
    }()
    
    @objc func onClickDownloadStatus() {
        NSLog("onClickDownloadStatus")
    }

}
