//
//  BXGCourseSectionExamVC.swift
//  BoxueguHD
//
//  Created by Renying Wu on 2018/7/20.
//  Copyright © 2018年 itcast. All rights reserved.
//

import Foundation

class BXGSectionExamVC: UIPageViewController {
    
    let viewModel: BXGSectionExamViewModel
    init(viewModel fromViewModel: BXGSectionExamViewModel) {
        viewModel = fromViewModel
        super.init(transitionStyle: .scroll, navigationOrientation: UIPageViewControllerNavigationOrientation.horizontal, options: nil)
        
        delegate = self
        dataSource = self
    }
    
    lazy var questionVC: UIViewController = {
        return BXGSectionExamQuestionVC(viewModel: viewModel)
    }()
    
    lazy var resultVC: UIViewController = {
        return BXGSectionExamResultVC(viewModel: viewModel)
    }()
    
    override func viewDidLoad() {
//        installUI()
        setViewControllers([questionVC], direction: UIPageViewControllerNavigationDirection.forward, animated: true) { (completion) in
            
        }
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    
    
    // MARK: UI
    
    lazy var scrollView: UIScrollView = {
        let scrollView = UIScrollView()
        return scrollView
    }()
    
    lazy var firstView: UIView = {
        let firstView = UIView()
        firstView.backgroundColor = UIColor.random()
        return firstView
    }()
    
    lazy var secondView: UIView = {
        let secondView = UIView()
        secondView.backgroundColor = UIColor.random()
        return secondView
    }()
    
    func installUI() {
        view.addSubview(firstView)
        view.addSubview(secondView)
        
        firstView.snp.makeConstraints { (make) in
            
        }
        
    }
    
    
}

extension BXGSectionExamVC: UIPageViewControllerDelegate, UIPageViewControllerDataSource {
    func pageViewController(_ pageViewController: UIPageViewController, viewControllerBefore viewController: UIViewController) -> UIViewController? {
        if viewController === resultVC {
            return questionVC
        }
        return nil
    }
    
    func pageViewController(_ pageViewController: UIPageViewController, viewControllerAfter viewController: UIViewController) -> UIViewController? {
        
        if viewController === questionVC {
            return resultVC
        }
        return nil
    }
    
    
}




